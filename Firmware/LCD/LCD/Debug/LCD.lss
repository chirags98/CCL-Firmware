
LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  000009b0  00000a44  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009b0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  0080011e  0080011e  00000a62  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a62  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a94  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000ad4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000013b7  00000000  00000000  00000bac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a92  00000000  00000000  00001f63  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009c5  00000000  00000000  000029f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000198  00000000  00000000  000033bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000053a  00000000  00000000  00003554  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000650  00000000  00000000  00003a8e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  000040de  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 eb       	ldi	r30, 0xB0	; 176
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 31       	cpi	r26, 0x1E	; 30
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e1       	ldi	r26, 0x1E	; 30
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ab 32       	cpi	r26, 0x2B	; 43
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 a3 02 	call	0x546	; 0x546 <main>
  9e:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <adc_pin_config>:
#include <util/delay.h>

//ADC pin configuration
void adc_pin_config (void)
{
	DDRC = 0x00; //set PORTF direction as input
  a6:	17 b8       	out	0x07, r1	; 7
	PORTC = 0x00; //set PORTF pins floating
  a8:	18 b8       	out	0x08, r1	; 8
  aa:	08 95       	ret

000000ac <adc_config>:
}

void adc_config(void)
{
	//ADCSRA=0x85; //1 --- 0 101 ADC Enable, ADC Interrupt disable, ADC Prescaler=32
	ADCSRA=0x87; //1 --- 0 111 ADC Enable, ADC Interrupt disable, ADC Prescaler=128
  ac:	87 e8       	ldi	r24, 0x87	; 135
  ae:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
  b2:	08 95       	ret

000000b4 <read_adc>:
}

unsigned int read_adc()
{
	ADCSRA|=0x40; //ADSC: ADC Start Conversion: In Single Conversion mode, write this bit to one to start each conversion.	
  b4:	ea e7       	ldi	r30, 0x7A	; 122
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	80 64       	ori	r24, 0x40	; 64
  bc:	80 83       	st	Z, r24
	while((ADCSRA & 0x10)==0); //ADIF: ADC Interrupt Flag: This bit is set when an ADC conversion completes and the Data Registers are updated.
  be:	80 81       	ld	r24, Z
  c0:	84 ff       	sbrs	r24, 4
  c2:	fd cf       	rjmp	.-6      	; 0xbe <read_adc+0xa>
	ADCSRA|=0x10;	//ADIF is cleared by writing a logical one to the flag.
  c4:	ea e7       	ldi	r30, 0x7A	; 122
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	80 61       	ori	r24, 0x10	; 16
  cc:	80 83       	st	Z, r24
	
	unsigned char low = ADCL;
  ce:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
	unsigned char high = ADCH;
  d2:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
	
	unsigned int val = 0x03 && high;
	val = val<<8;
	val = 256*high + low;
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	98 2f       	mov	r25, r24
  da:	88 27       	eor	r24, r24
	
	return val;
}
  dc:	82 0f       	add	r24, r18
  de:	91 1d       	adc	r25, r1
  e0:	08 95       	ret

000000e2 <read_adc_channel>:

unsigned int read_adc_channel(char channel)
{
	if (channel>=0 && channel<=7)
  e2:	88 30       	cpi	r24, 0x08	; 8
  e4:	58 f4       	brcc	.+22     	; 0xfc <read_adc_channel+0x1a>
	{	
		//ADMUX = 0x40 | channel;	//01 - - AVCC with external capacitor at AREF pin :--: 0000  ADC 0 (Channel)
		ADMUX = 0x00 | channel;	//00 - - AREF, Internal Vref turned off :--: 0000  ADC 0 (Channel)
  e6:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ea:	8f e1       	ldi	r24, 0x1F	; 31
  ec:	9e e4       	ldi	r25, 0x4E	; 78
  ee:	01 97       	sbiw	r24, 0x01	; 1
  f0:	f1 f7       	brne	.-4      	; 0xee <read_adc_channel+0xc>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <read_adc_channel+0x12>
  f4:	00 00       	nop
		_delay_ms(5);
		return read_adc();
  f6:	0e 94 5a 00 	call	0xb4	; 0xb4 <read_adc>
  fa:	08 95       	ret
	}
	else
		return 22;				//error
  fc:	86 e1       	ldi	r24, 0x16	; 22
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	08 95       	ret

00000102 <Bit_Reverse>:
 102:	98 2f       	mov	r25, r24
 104:	88 1f       	adc	r24, r24
 106:	88 27       	eor	r24, r24
 108:	88 1f       	adc	r24, r24
 10a:	96 fd       	sbrc	r25, 6
 10c:	02 c0       	rjmp	.+4      	; 0x112 <Bit_Reverse+0x10>
 10e:	20 e0       	ldi	r18, 0x00	; 0
 110:	01 c0       	rjmp	.+2      	; 0x114 <Bit_Reverse+0x12>
 112:	22 e0       	ldi	r18, 0x02	; 2
 114:	82 2b       	or	r24, r18
 116:	95 fd       	sbrc	r25, 5
 118:	02 c0       	rjmp	.+4      	; 0x11e <Bit_Reverse+0x1c>
 11a:	20 e0       	ldi	r18, 0x00	; 0
 11c:	01 c0       	rjmp	.+2      	; 0x120 <Bit_Reverse+0x1e>
 11e:	24 e0       	ldi	r18, 0x04	; 4
 120:	82 2b       	or	r24, r18
 122:	94 fd       	sbrc	r25, 4
 124:	02 c0       	rjmp	.+4      	; 0x12a <Bit_Reverse+0x28>
 126:	20 e0       	ldi	r18, 0x00	; 0
 128:	01 c0       	rjmp	.+2      	; 0x12c <Bit_Reverse+0x2a>
 12a:	28 e0       	ldi	r18, 0x08	; 8
 12c:	82 2b       	or	r24, r18
 12e:	93 fd       	sbrc	r25, 3
 130:	02 c0       	rjmp	.+4      	; 0x136 <Bit_Reverse+0x34>
 132:	20 e0       	ldi	r18, 0x00	; 0
 134:	01 c0       	rjmp	.+2      	; 0x138 <Bit_Reverse+0x36>
 136:	20 e1       	ldi	r18, 0x10	; 16
 138:	82 2b       	or	r24, r18
 13a:	92 fd       	sbrc	r25, 2
 13c:	02 c0       	rjmp	.+4      	; 0x142 <Bit_Reverse+0x40>
 13e:	20 e0       	ldi	r18, 0x00	; 0
 140:	01 c0       	rjmp	.+2      	; 0x144 <Bit_Reverse+0x42>
 142:	20 e2       	ldi	r18, 0x20	; 32
 144:	82 2b       	or	r24, r18
 146:	91 fd       	sbrc	r25, 1
 148:	02 c0       	rjmp	.+4      	; 0x14e <Bit_Reverse+0x4c>
 14a:	20 e0       	ldi	r18, 0x00	; 0
 14c:	01 c0       	rjmp	.+2      	; 0x150 <Bit_Reverse+0x4e>
 14e:	20 e4       	ldi	r18, 0x40	; 64
 150:	82 2b       	or	r24, r18
 152:	90 fd       	sbrc	r25, 0
 154:	02 c0       	rjmp	.+4      	; 0x15a <Bit_Reverse+0x58>
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	01 c0       	rjmp	.+2      	; 0x15c <Bit_Reverse+0x5a>
 15a:	90 e8       	ldi	r25, 0x80	; 128
 15c:	89 2b       	or	r24, r25
 15e:	08 95       	ret

00000160 <lcd_wr_command>:
 160:	cf 93       	push	r28
 162:	c8 2f       	mov	r28, r24
 164:	80 7f       	andi	r24, 0xF0	; 240
 166:	0e 94 81 00 	call	0x102	; 0x102 <Bit_Reverse>
 16a:	88 0f       	add	r24, r24
 16c:	88 0f       	add	r24, r24
 16e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__data_end>
 172:	9b b1       	in	r25, 0x0b	; 11
 174:	93 7c       	andi	r25, 0xC3	; 195
 176:	9b b9       	out	0x0b, r25	; 11
 178:	8b b1       	in	r24, 0x0b	; 11
 17a:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <__data_end>
 17e:	98 2b       	or	r25, r24
 180:	9b b9       	out	0x0b, r25	; 11
 182:	5f 98       	cbi	0x0b, 7	; 11
 184:	5e 9a       	sbi	0x0b, 6	; 11
 186:	8f e1       	ldi	r24, 0x1F	; 31
 188:	9e e4       	ldi	r25, 0x4E	; 78
 18a:	01 97       	sbiw	r24, 0x01	; 1
 18c:	f1 f7       	brne	.-4      	; 0x18a <lcd_wr_command+0x2a>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <lcd_wr_command+0x30>
 190:	00 00       	nop
 192:	5e 98       	cbi	0x0b, 6	; 11
 194:	8c 2f       	mov	r24, r28
 196:	82 95       	swap	r24
 198:	80 7f       	andi	r24, 0xF0	; 240
 19a:	0e 94 81 00 	call	0x102	; 0x102 <Bit_Reverse>
 19e:	9b b1       	in	r25, 0x0b	; 11
 1a0:	93 7c       	andi	r25, 0xC3	; 195
 1a2:	9b b9       	out	0x0b, r25	; 11
 1a4:	9b b1       	in	r25, 0x0b	; 11
 1a6:	88 0f       	add	r24, r24
 1a8:	88 0f       	add	r24, r24
 1aa:	98 2b       	or	r25, r24
 1ac:	9b b9       	out	0x0b, r25	; 11
 1ae:	5f 98       	cbi	0x0b, 7	; 11
 1b0:	5e 9a       	sbi	0x0b, 6	; 11
 1b2:	8f e1       	ldi	r24, 0x1F	; 31
 1b4:	9e e4       	ldi	r25, 0x4E	; 78
 1b6:	01 97       	sbiw	r24, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <lcd_wr_command+0x56>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <lcd_wr_command+0x5c>
 1bc:	00 00       	nop
 1be:	5e 98       	cbi	0x0b, 6	; 11
 1c0:	cf 91       	pop	r28
 1c2:	08 95       	ret

000001c4 <lcd_wr_char>:
 1c4:	cf 93       	push	r28
 1c6:	c8 2f       	mov	r28, r24
 1c8:	80 7f       	andi	r24, 0xF0	; 240
 1ca:	0e 94 81 00 	call	0x102	; 0x102 <Bit_Reverse>
 1ce:	9b b1       	in	r25, 0x0b	; 11
 1d0:	93 7c       	andi	r25, 0xC3	; 195
 1d2:	9b b9       	out	0x0b, r25	; 11
 1d4:	9b b1       	in	r25, 0x0b	; 11
 1d6:	88 0f       	add	r24, r24
 1d8:	88 0f       	add	r24, r24
 1da:	98 2b       	or	r25, r24
 1dc:	9b b9       	out	0x0b, r25	; 11
 1de:	5f 9a       	sbi	0x0b, 7	; 11
 1e0:	5e 9a       	sbi	0x0b, 6	; 11
 1e2:	8f e1       	ldi	r24, 0x1F	; 31
 1e4:	9e e4       	ldi	r25, 0x4E	; 78
 1e6:	01 97       	sbiw	r24, 0x01	; 1
 1e8:	f1 f7       	brne	.-4      	; 0x1e6 <lcd_wr_char+0x22>
 1ea:	00 c0       	rjmp	.+0      	; 0x1ec <lcd_wr_char+0x28>
 1ec:	00 00       	nop
 1ee:	5e 98       	cbi	0x0b, 6	; 11
 1f0:	8c 2f       	mov	r24, r28
 1f2:	82 95       	swap	r24
 1f4:	80 7f       	andi	r24, 0xF0	; 240
 1f6:	0e 94 81 00 	call	0x102	; 0x102 <Bit_Reverse>
 1fa:	9b b1       	in	r25, 0x0b	; 11
 1fc:	93 7c       	andi	r25, 0xC3	; 195
 1fe:	9b b9       	out	0x0b, r25	; 11
 200:	9b b1       	in	r25, 0x0b	; 11
 202:	88 0f       	add	r24, r24
 204:	88 0f       	add	r24, r24
 206:	98 2b       	or	r25, r24
 208:	9b b9       	out	0x0b, r25	; 11
 20a:	5f 9a       	sbi	0x0b, 7	; 11
 20c:	5e 9a       	sbi	0x0b, 6	; 11
 20e:	8f e1       	ldi	r24, 0x1F	; 31
 210:	9e e4       	ldi	r25, 0x4E	; 78
 212:	01 97       	sbiw	r24, 0x01	; 1
 214:	f1 f7       	brne	.-4      	; 0x212 <lcd_wr_char+0x4e>
 216:	00 c0       	rjmp	.+0      	; 0x218 <lcd_wr_char+0x54>
 218:	00 00       	nop
 21a:	5e 98       	cbi	0x0b, 6	; 11
 21c:	cf 91       	pop	r28
 21e:	08 95       	ret

00000220 <lcd_port_config>:
 220:	8a b1       	in	r24, 0x0a	; 10
 222:	8c 6f       	ori	r24, 0xFC	; 252
 224:	8a b9       	out	0x0a, r24	; 10
 226:	8b b1       	in	r24, 0x0b	; 11
 228:	84 70       	andi	r24, 0x04	; 4
 22a:	8b b9       	out	0x0b, r24	; 11
 22c:	08 95       	ret

0000022e <lcd_home>:
 22e:	80 e8       	ldi	r24, 0x80	; 128
 230:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_wr_command>
 234:	08 95       	ret

00000236 <lcd_cursor>:
 236:	81 30       	cpi	r24, 0x01	; 1
 238:	19 f0       	breq	.+6      	; 0x240 <lcd_cursor+0xa>
 23a:	82 30       	cpi	r24, 0x02	; 2
 23c:	31 f0       	breq	.+12     	; 0x24a <lcd_cursor+0x14>
 23e:	08 95       	ret
 240:	8f e7       	ldi	r24, 0x7F	; 127
 242:	86 0f       	add	r24, r22
 244:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_wr_command>
 248:	08 95       	ret
 24a:	8f eb       	ldi	r24, 0xBF	; 191
 24c:	86 0f       	add	r24, r22
 24e:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_wr_command>
 252:	08 95       	ret

00000254 <lcd_string2>:
 254:	cf 93       	push	r28
 256:	df 93       	push	r29
 258:	ea 01       	movw	r28, r20
 25a:	0e 94 1b 01 	call	0x236	; 0x236 <lcd_cursor>
 25e:	88 81       	ld	r24, Y
 260:	88 23       	and	r24, r24
 262:	31 f0       	breq	.+12     	; 0x270 <lcd_string2+0x1c>
 264:	21 96       	adiw	r28, 0x01	; 1
 266:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_wr_char>
 26a:	89 91       	ld	r24, Y+
 26c:	81 11       	cpse	r24, r1
 26e:	fb cf       	rjmp	.-10     	; 0x266 <lcd_string2+0x12>
 270:	df 91       	pop	r29
 272:	cf 91       	pop	r28
 274:	08 95       	ret

00000276 <lcd_print>:
 276:	0f 93       	push	r16
 278:	1f 93       	push	r17
 27a:	cf 93       	push	r28
 27c:	df 93       	push	r29
 27e:	8a 01       	movw	r16, r20
 280:	e9 01       	movw	r28, r18
 282:	88 23       	and	r24, r24
 284:	11 f0       	breq	.+4      	; 0x28a <lcd_print+0x14>
 286:	61 11       	cpse	r22, r1
 288:	03 c0       	rjmp	.+6      	; 0x290 <lcd_print+0x1a>
 28a:	0e 94 17 01 	call	0x22e	; 0x22e <lcd_home>
 28e:	02 c0       	rjmp	.+4      	; 0x294 <lcd_print+0x1e>
 290:	0e 94 1b 01 	call	0x236	; 0x236 <lcd_cursor>
 294:	c5 30       	cpi	r28, 0x05	; 5
 296:	d1 05       	cpc	r29, r1
 298:	c9 f4       	brne	.+50     	; 0x2cc <lcd_print+0x56>
 29a:	98 01       	movw	r18, r16
 29c:	32 95       	swap	r19
 29e:	22 95       	swap	r18
 2a0:	2f 70       	andi	r18, 0x0F	; 15
 2a2:	23 27       	eor	r18, r19
 2a4:	3f 70       	andi	r19, 0x0F	; 15
 2a6:	23 27       	eor	r18, r19
 2a8:	a7 e4       	ldi	r26, 0x47	; 71
 2aa:	b3 e0       	ldi	r27, 0x03	; 3
 2ac:	0e 94 c7 04 	call	0x98e	; 0x98e <__umulhisi3>
 2b0:	96 95       	lsr	r25
 2b2:	87 95       	ror	r24
 2b4:	96 95       	lsr	r25
 2b6:	87 95       	ror	r24
 2b8:	96 95       	lsr	r25
 2ba:	87 95       	ror	r24
 2bc:	c0 96       	adiw	r24, 0x30	; 48
 2be:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <million+0x1>
 2c2:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <million>
 2c6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_wr_char>
 2ca:	04 c0       	rjmp	.+8      	; 0x2d4 <lcd_print+0x5e>
 2cc:	c4 30       	cpi	r28, 0x04	; 4
 2ce:	d1 05       	cpc	r29, r1
 2d0:	09 f0       	breq	.+2      	; 0x2d4 <lcd_print+0x5e>
 2d2:	c3 c0       	rjmp	.+390    	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 2d4:	98 01       	movw	r18, r16
 2d6:	36 95       	lsr	r19
 2d8:	27 95       	ror	r18
 2da:	36 95       	lsr	r19
 2dc:	27 95       	ror	r18
 2de:	36 95       	lsr	r19
 2e0:	27 95       	ror	r18
 2e2:	a5 ec       	ldi	r26, 0xC5	; 197
 2e4:	b0 e2       	ldi	r27, 0x20	; 32
 2e6:	0e 94 c7 04 	call	0x98e	; 0x98e <__umulhisi3>
 2ea:	ac 01       	movw	r20, r24
 2ec:	52 95       	swap	r21
 2ee:	42 95       	swap	r20
 2f0:	4f 70       	andi	r20, 0x0F	; 15
 2f2:	45 27       	eor	r20, r21
 2f4:	5f 70       	andi	r21, 0x0F	; 15
 2f6:	45 27       	eor	r20, r21
 2f8:	50 93 2a 01 	sts	0x012A, r21	; 0x80012a <temp+0x1>
 2fc:	40 93 29 01 	sts	0x0129, r20	; 0x800129 <temp>
 300:	9a 01       	movw	r18, r20
 302:	ad ec       	ldi	r26, 0xCD	; 205
 304:	bc ec       	ldi	r27, 0xCC	; 204
 306:	0e 94 c7 04 	call	0x98e	; 0x98e <__umulhisi3>
 30a:	96 95       	lsr	r25
 30c:	87 95       	ror	r24
 30e:	96 95       	lsr	r25
 310:	87 95       	ror	r24
 312:	96 95       	lsr	r25
 314:	87 95       	ror	r24
 316:	9c 01       	movw	r18, r24
 318:	22 0f       	add	r18, r18
 31a:	33 1f       	adc	r19, r19
 31c:	88 0f       	add	r24, r24
 31e:	99 1f       	adc	r25, r25
 320:	88 0f       	add	r24, r24
 322:	99 1f       	adc	r25, r25
 324:	88 0f       	add	r24, r24
 326:	99 1f       	adc	r25, r25
 328:	82 0f       	add	r24, r18
 32a:	93 1f       	adc	r25, r19
 32c:	9a 01       	movw	r18, r20
 32e:	28 1b       	sub	r18, r24
 330:	39 0b       	sbc	r19, r25
 332:	c9 01       	movw	r24, r18
 334:	c0 96       	adiw	r24, 0x30	; 48
 336:	90 93 22 01 	sts	0x0122, r25	; 0x800122 <thousand+0x1>
 33a:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <thousand>
 33e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_wr_char>
 342:	98 01       	movw	r18, r16
 344:	36 95       	lsr	r19
 346:	27 95       	ror	r18
 348:	36 95       	lsr	r19
 34a:	27 95       	ror	r18
 34c:	ab e7       	ldi	r26, 0x7B	; 123
 34e:	b4 e1       	ldi	r27, 0x14	; 20
 350:	0e 94 c7 04 	call	0x98e	; 0x98e <__umulhisi3>
 354:	ac 01       	movw	r20, r24
 356:	56 95       	lsr	r21
 358:	47 95       	ror	r20
 35a:	50 93 2a 01 	sts	0x012A, r21	; 0x80012a <temp+0x1>
 35e:	40 93 29 01 	sts	0x0129, r20	; 0x800129 <temp>
 362:	9a 01       	movw	r18, r20
 364:	ad ec       	ldi	r26, 0xCD	; 205
 366:	bc ec       	ldi	r27, 0xCC	; 204
 368:	0e 94 c7 04 	call	0x98e	; 0x98e <__umulhisi3>
 36c:	96 95       	lsr	r25
 36e:	87 95       	ror	r24
 370:	96 95       	lsr	r25
 372:	87 95       	ror	r24
 374:	96 95       	lsr	r25
 376:	87 95       	ror	r24
 378:	9c 01       	movw	r18, r24
 37a:	22 0f       	add	r18, r18
 37c:	33 1f       	adc	r19, r19
 37e:	88 0f       	add	r24, r24
 380:	99 1f       	adc	r25, r25
 382:	88 0f       	add	r24, r24
 384:	99 1f       	adc	r25, r25
 386:	88 0f       	add	r24, r24
 388:	99 1f       	adc	r25, r25
 38a:	82 0f       	add	r24, r18
 38c:	93 1f       	adc	r25, r19
 38e:	9a 01       	movw	r18, r20
 390:	28 1b       	sub	r18, r24
 392:	39 0b       	sbc	r19, r25
 394:	c9 01       	movw	r24, r18
 396:	c0 96       	adiw	r24, 0x30	; 48
 398:	90 93 24 01 	sts	0x0124, r25	; 0x800124 <hundred+0x1>
 39c:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <hundred>
 3a0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_wr_char>
 3a4:	04 c0       	rjmp	.+8      	; 0x3ae <lcd_print+0x138>
 3a6:	c2 30       	cpi	r28, 0x02	; 2
 3a8:	d1 05       	cpc	r29, r1
 3aa:	09 f0       	breq	.+2      	; 0x3ae <lcd_print+0x138>
 3ac:	5b c0       	rjmp	.+182    	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 3ae:	98 01       	movw	r18, r16
 3b0:	ad ec       	ldi	r26, 0xCD	; 205
 3b2:	bc ec       	ldi	r27, 0xCC	; 204
 3b4:	0e 94 c7 04 	call	0x98e	; 0x98e <__umulhisi3>
 3b8:	ac 01       	movw	r20, r24
 3ba:	56 95       	lsr	r21
 3bc:	47 95       	ror	r20
 3be:	56 95       	lsr	r21
 3c0:	47 95       	ror	r20
 3c2:	56 95       	lsr	r21
 3c4:	47 95       	ror	r20
 3c6:	50 93 2a 01 	sts	0x012A, r21	; 0x80012a <temp+0x1>
 3ca:	40 93 29 01 	sts	0x0129, r20	; 0x800129 <temp>
 3ce:	9a 01       	movw	r18, r20
 3d0:	0e 94 c7 04 	call	0x98e	; 0x98e <__umulhisi3>
 3d4:	96 95       	lsr	r25
 3d6:	87 95       	ror	r24
 3d8:	96 95       	lsr	r25
 3da:	87 95       	ror	r24
 3dc:	96 95       	lsr	r25
 3de:	87 95       	ror	r24
 3e0:	9c 01       	movw	r18, r24
 3e2:	22 0f       	add	r18, r18
 3e4:	33 1f       	adc	r19, r19
 3e6:	88 0f       	add	r24, r24
 3e8:	99 1f       	adc	r25, r25
 3ea:	88 0f       	add	r24, r24
 3ec:	99 1f       	adc	r25, r25
 3ee:	88 0f       	add	r24, r24
 3f0:	99 1f       	adc	r25, r25
 3f2:	82 0f       	add	r24, r18
 3f4:	93 1f       	adc	r25, r19
 3f6:	9a 01       	movw	r18, r20
 3f8:	28 1b       	sub	r18, r24
 3fa:	39 0b       	sbc	r19, r25
 3fc:	c9 01       	movw	r24, r18
 3fe:	c0 96       	adiw	r24, 0x30	; 48
 400:	90 93 26 01 	sts	0x0126, r25	; 0x800126 <tens+0x1>
 404:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <tens>
 408:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_wr_char>
 40c:	98 01       	movw	r18, r16
 40e:	ad ec       	ldi	r26, 0xCD	; 205
 410:	bc ec       	ldi	r27, 0xCC	; 204
 412:	0e 94 c7 04 	call	0x98e	; 0x98e <__umulhisi3>
 416:	96 95       	lsr	r25
 418:	87 95       	ror	r24
 41a:	96 95       	lsr	r25
 41c:	87 95       	ror	r24
 41e:	96 95       	lsr	r25
 420:	87 95       	ror	r24
 422:	9c 01       	movw	r18, r24
 424:	22 0f       	add	r18, r18
 426:	33 1f       	adc	r19, r19
 428:	88 0f       	add	r24, r24
 42a:	99 1f       	adc	r25, r25
 42c:	88 0f       	add	r24, r24
 42e:	99 1f       	adc	r25, r25
 430:	88 0f       	add	r24, r24
 432:	99 1f       	adc	r25, r25
 434:	82 0f       	add	r24, r18
 436:	93 1f       	adc	r25, r19
 438:	98 01       	movw	r18, r16
 43a:	28 1b       	sub	r18, r24
 43c:	39 0b       	sbc	r19, r25
 43e:	c9 01       	movw	r24, r18
 440:	c0 96       	adiw	r24, 0x30	; 48
 442:	90 93 28 01 	sts	0x0128, r25	; 0x800128 <unit+0x1>
 446:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <unit>
 44a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_wr_char>
 44e:	26 97       	sbiw	r28, 0x06	; 6
 450:	6c f0       	brlt	.+26     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 452:	85 e4       	ldi	r24, 0x45	; 69
 454:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_wr_char>
 458:	09 c0       	rjmp	.+18     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 45a:	c3 30       	cpi	r28, 0x03	; 3
 45c:	d1 05       	cpc	r29, r1
 45e:	09 f0       	breq	.+2      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 460:	a2 cf       	rjmp	.-188    	; 0x3a6 <lcd_print+0x130>
 462:	6f cf       	rjmp	.-290    	; 0x342 <lcd_print+0xcc>
 464:	c1 30       	cpi	r28, 0x01	; 1
 466:	d1 05       	cpc	r29, r1
 468:	91 f7       	brne	.-28     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 46a:	d0 cf       	rjmp	.-96     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 46c:	df 91       	pop	r29
 46e:	cf 91       	pop	r28
 470:	1f 91       	pop	r17
 472:	0f 91       	pop	r16
 474:	08 95       	ret

00000476 <lcd_start>:
 476:	8f e9       	ldi	r24, 0x9F	; 159
 478:	9f e0       	ldi	r25, 0x0F	; 15
 47a:	01 97       	sbiw	r24, 0x01	; 1
 47c:	f1 f7       	brne	.-4      	; 0x47a <lcd_start+0x4>
 47e:	00 c0       	rjmp	.+0      	; 0x480 <lcd_start+0xa>
 480:	00 00       	nop
 482:	5f 98       	cbi	0x0b, 7	; 11
 484:	80 e3       	ldi	r24, 0x30	; 48
 486:	8b b9       	out	0x0b, r24	; 11
 488:	5e 9a       	sbi	0x0b, 6	; 11
 48a:	ef e1       	ldi	r30, 0x1F	; 31
 48c:	fe e4       	ldi	r31, 0x4E	; 78
 48e:	31 97       	sbiw	r30, 0x01	; 1
 490:	f1 f7       	brne	.-4      	; 0x48e <lcd_start+0x18>
 492:	00 c0       	rjmp	.+0      	; 0x494 <lcd_start+0x1e>
 494:	00 00       	nop
 496:	5e 98       	cbi	0x0b, 6	; 11
 498:	ef e9       	ldi	r30, 0x9F	; 159
 49a:	ff e0       	ldi	r31, 0x0F	; 15
 49c:	31 97       	sbiw	r30, 0x01	; 1
 49e:	f1 f7       	brne	.-4      	; 0x49c <lcd_start+0x26>
 4a0:	00 c0       	rjmp	.+0      	; 0x4a2 <lcd_start+0x2c>
 4a2:	00 00       	nop
 4a4:	5f 98       	cbi	0x0b, 7	; 11
 4a6:	8b b9       	out	0x0b, r24	; 11
 4a8:	5e 9a       	sbi	0x0b, 6	; 11
 4aa:	ef e1       	ldi	r30, 0x1F	; 31
 4ac:	fe e4       	ldi	r31, 0x4E	; 78
 4ae:	31 97       	sbiw	r30, 0x01	; 1
 4b0:	f1 f7       	brne	.-4      	; 0x4ae <lcd_start+0x38>
 4b2:	00 c0       	rjmp	.+0      	; 0x4b4 <lcd_start+0x3e>
 4b4:	00 00       	nop
 4b6:	5e 98       	cbi	0x0b, 6	; 11
 4b8:	ef e9       	ldi	r30, 0x9F	; 159
 4ba:	ff e0       	ldi	r31, 0x0F	; 15
 4bc:	31 97       	sbiw	r30, 0x01	; 1
 4be:	f1 f7       	brne	.-4      	; 0x4bc <lcd_start+0x46>
 4c0:	00 c0       	rjmp	.+0      	; 0x4c2 <lcd_start+0x4c>
 4c2:	00 00       	nop
 4c4:	5f 98       	cbi	0x0b, 7	; 11
 4c6:	8b b9       	out	0x0b, r24	; 11
 4c8:	5e 9a       	sbi	0x0b, 6	; 11
 4ca:	8f e1       	ldi	r24, 0x1F	; 31
 4cc:	9e e4       	ldi	r25, 0x4E	; 78
 4ce:	01 97       	sbiw	r24, 0x01	; 1
 4d0:	f1 f7       	brne	.-4      	; 0x4ce <lcd_start+0x58>
 4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <lcd_start+0x5e>
 4d4:	00 00       	nop
 4d6:	5e 98       	cbi	0x0b, 6	; 11
 4d8:	ef e9       	ldi	r30, 0x9F	; 159
 4da:	ff e0       	ldi	r31, 0x0F	; 15
 4dc:	31 97       	sbiw	r30, 0x01	; 1
 4de:	f1 f7       	brne	.-4      	; 0x4dc <lcd_start+0x66>
 4e0:	00 c0       	rjmp	.+0      	; 0x4e2 <lcd_start+0x6c>
 4e2:	00 00       	nop
 4e4:	5f 98       	cbi	0x0b, 7	; 11
 4e6:	80 e1       	ldi	r24, 0x10	; 16
 4e8:	8b b9       	out	0x0b, r24	; 11
 4ea:	5e 9a       	sbi	0x0b, 6	; 11
 4ec:	8f e9       	ldi	r24, 0x9F	; 159
 4ee:	9f e0       	ldi	r25, 0x0F	; 15
 4f0:	01 97       	sbiw	r24, 0x01	; 1
 4f2:	f1 f7       	brne	.-4      	; 0x4f0 <lcd_start+0x7a>
 4f4:	00 c0       	rjmp	.+0      	; 0x4f6 <lcd_start+0x80>
 4f6:	00 00       	nop
 4f8:	5e 98       	cbi	0x0b, 6	; 11
 4fa:	ef e9       	ldi	r30, 0x9F	; 159
 4fc:	ff e0       	ldi	r31, 0x0F	; 15
 4fe:	31 97       	sbiw	r30, 0x01	; 1
 500:	f1 f7       	brne	.-4      	; 0x4fe <lcd_start+0x88>
 502:	00 c0       	rjmp	.+0      	; 0x504 <lcd_start+0x8e>
 504:	00 00       	nop
 506:	88 e2       	ldi	r24, 0x28	; 40
 508:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_wr_command>
 50c:	81 e0       	ldi	r24, 0x01	; 1
 50e:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_wr_command>
 512:	86 e0       	ldi	r24, 0x06	; 6
 514:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_wr_command>
 518:	8e e0       	ldi	r24, 0x0E	; 14
 51a:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_wr_command>
 51e:	80 e8       	ldi	r24, 0x80	; 128
 520:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_wr_command>
 524:	08 95       	ret

00000526 <lcd_clear>:
 526:	81 e0       	ldi	r24, 0x01	; 1
 528:	0e 94 b0 00 	call	0x160	; 0x160 <lcd_wr_command>
 52c:	08 95       	ret

0000052e <port_config>:
#include "lcd.h"
#include "ADC.h"

void port_config (void)
{
	lcd_port_config();
 52e:	0e 94 10 01 	call	0x220	; 0x220 <lcd_port_config>
	adc_pin_config();
 532:	0e 94 53 00 	call	0xa6	; 0xa6 <adc_pin_config>
 536:	08 95       	ret

00000538 <init_devices>:
}

void init_devices (void)
{
	cli(); //Clears the global interrupts
 538:	f8 94       	cli
	lcd_start();
 53a:	0e 94 3b 02 	call	0x476	; 0x476 <lcd_start>
	adc_config();
 53e:	0e 94 56 00 	call	0xac	; 0xac <adc_config>
	sei();   //Enables the global interrupts
 542:	78 94       	sei
 544:	08 95       	ret

00000546 <main>:
}

int main(void)
{
	port_config();
 546:	0e 94 97 02 	call	0x52e	; 0x52e <port_config>
	init_devices();
 54a:	0e 94 9c 02 	call	0x538	; 0x538 <init_devices>
	float voltage = 0;
	float current = 0;
	float power = 0;
	float offset = 0;
	
	lcd_string2(1, 7, "CCL");
 54e:	40 e0       	ldi	r20, 0x00	; 0
 550:	51 e0       	ldi	r21, 0x01	; 1
 552:	67 e0       	ldi	r22, 0x07	; 7
 554:	81 e0       	ldi	r24, 0x01	; 1
 556:	0e 94 2a 01 	call	0x254	; 0x254 <lcd_string2>
 55a:	2f ef       	ldi	r18, 0xFF	; 255
 55c:	85 ea       	ldi	r24, 0xA5	; 165
 55e:	9e e0       	ldi	r25, 0x0E	; 14
 560:	21 50       	subi	r18, 0x01	; 1
 562:	80 40       	sbci	r24, 0x00	; 0
 564:	90 40       	sbci	r25, 0x00	; 0
 566:	e1 f7       	brne	.-8      	; 0x560 <main+0x1a>
 568:	00 c0       	rjmp	.+0      	; 0x56a <main+0x24>
 56a:	00 00       	nop
		lcd_string2(2,1,"Supply Connected");
	}
	
	else
	{
		lcd_string2(2,2,"12v Supply NC");
 56c:	44 e0       	ldi	r20, 0x04	; 4
 56e:	51 e0       	ldi	r21, 0x01	; 1
 570:	62 e0       	ldi	r22, 0x02	; 2
 572:	82 e0       	ldi	r24, 0x02	; 2
 574:	0e 94 2a 01 	call	0x254	; 0x254 <lcd_string2>
 578:	2f ef       	ldi	r18, 0xFF	; 255
 57a:	8b e4       	ldi	r24, 0x4B	; 75
 57c:	9d e1       	ldi	r25, 0x1D	; 29
 57e:	21 50       	subi	r18, 0x01	; 1
 580:	80 40       	sbci	r24, 0x00	; 0
 582:	90 40       	sbci	r25, 0x00	; 0
 584:	e1 f7       	brne	.-8      	; 0x57e <main+0x38>
 586:	00 c0       	rjmp	.+0      	; 0x588 <main+0x42>
 588:	00 00       	nop
		offset = 28.2;
	}
	
	_delay_ms(600);
	lcd_clear();
 58a:	0e 94 93 02 	call	0x526	; 0x526 <lcd_clear>
	while (1)
	{
		current = read_adc_channel(0);
 58e:	80 e0       	ldi	r24, 0x00	; 0
 590:	0e 94 71 00 	call	0xe2	; 0xe2 <read_adc_channel>
 594:	bc 01       	movw	r22, r24
 596:	80 e0       	ldi	r24, 0x00	; 0
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	0e 94 cc 03 	call	0x798	; 0x798 <__floatunsisf>
		current = current*1.953+5.7 + offset;
 59e:	27 ee       	ldi	r18, 0xE7	; 231
 5a0:	3b ef       	ldi	r19, 0xFB	; 251
 5a2:	49 ef       	ldi	r20, 0xF9	; 249
 5a4:	5f e3       	ldi	r21, 0x3F	; 63
 5a6:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <__mulsf3>
 5aa:	26 e6       	ldi	r18, 0x66	; 102
 5ac:	36 e6       	ldi	r19, 0x66	; 102
 5ae:	46 eb       	ldi	r20, 0xB6	; 182
 5b0:	50 e4       	ldi	r21, 0x40	; 64
 5b2:	0e 94 31 03 	call	0x662	; 0x662 <__addsf3>
 5b6:	2a e9       	ldi	r18, 0x9A	; 154
 5b8:	39 e9       	ldi	r19, 0x99	; 153
 5ba:	41 ee       	ldi	r20, 0xE1	; 225
 5bc:	51 e4       	ldi	r21, 0x41	; 65
 5be:	0e 94 31 03 	call	0x662	; 0x662 <__addsf3>
 5c2:	4b 01       	movw	r8, r22
 5c4:	5c 01       	movw	r10, r24
		lcd_print(1,1,current,4);
 5c6:	0e 94 9d 03 	call	0x73a	; 0x73a <__fixunssfsi>
 5ca:	24 e0       	ldi	r18, 0x04	; 4
 5cc:	30 e0       	ldi	r19, 0x00	; 0
 5ce:	ab 01       	movw	r20, r22
 5d0:	61 e0       	ldi	r22, 0x01	; 1
 5d2:	81 e0       	ldi	r24, 0x01	; 1
 5d4:	0e 94 3b 01 	call	0x276	; 0x276 <lcd_print>
		lcd_string2(1,5,"mA  ");
 5d8:	42 e1       	ldi	r20, 0x12	; 18
 5da:	51 e0       	ldi	r21, 0x01	; 1
 5dc:	65 e0       	ldi	r22, 0x05	; 5
 5de:	81 e0       	ldi	r24, 0x01	; 1
 5e0:	0e 94 2a 01 	call	0x254	; 0x254 <lcd_string2>
				
		voltage = read_adc_channel(1);
 5e4:	81 e0       	ldi	r24, 0x01	; 1
 5e6:	0e 94 71 00 	call	0xe2	; 0xe2 <read_adc_channel>
 5ea:	bc 01       	movw	r22, r24
 5ec:	80 e0       	ldi	r24, 0x00	; 0
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	0e 94 cc 03 	call	0x798	; 0x798 <__floatunsisf>
		voltage = voltage*0.0293;
 5f4:	2e e8       	ldi	r18, 0x8E	; 142
 5f6:	36 e0       	ldi	r19, 0x06	; 6
 5f8:	40 ef       	ldi	r20, 0xF0	; 240
 5fa:	5c e3       	ldi	r21, 0x3C	; 60
 5fc:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <__mulsf3>
 600:	6b 01       	movw	r12, r22
 602:	7c 01       	movw	r14, r24
		lcd_print(1,10,voltage,4);
 604:	0e 94 9d 03 	call	0x73a	; 0x73a <__fixunssfsi>
 608:	24 e0       	ldi	r18, 0x04	; 4
 60a:	30 e0       	ldi	r19, 0x00	; 0
 60c:	ab 01       	movw	r20, r22
 60e:	6a e0       	ldi	r22, 0x0A	; 10
 610:	81 e0       	ldi	r24, 0x01	; 1
 612:	0e 94 3b 01 	call	0x276	; 0x276 <lcd_print>
		lcd_string2(1,14,"V  ");
 616:	47 e1       	ldi	r20, 0x17	; 23
 618:	51 e0       	ldi	r21, 0x01	; 1
 61a:	6e e0       	ldi	r22, 0x0E	; 14
 61c:	81 e0       	ldi	r24, 0x01	; 1
 61e:	0e 94 2a 01 	call	0x254	; 0x254 <lcd_string2>
		
		power = voltage*current;
 622:	a5 01       	movw	r20, r10
 624:	94 01       	movw	r18, r8
 626:	c7 01       	movw	r24, r14
 628:	b6 01       	movw	r22, r12
 62a:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <__mulsf3>
		lcd_print(2,1,power,5);
 62e:	0e 94 9d 03 	call	0x73a	; 0x73a <__fixunssfsi>
 632:	25 e0       	ldi	r18, 0x05	; 5
 634:	30 e0       	ldi	r19, 0x00	; 0
 636:	ab 01       	movw	r20, r22
 638:	61 e0       	ldi	r22, 0x01	; 1
 63a:	82 e0       	ldi	r24, 0x02	; 2
 63c:	0e 94 3b 01 	call	0x276	; 0x276 <lcd_print>
		lcd_string2(2,6,"mW");
 640:	4b e1       	ldi	r20, 0x1B	; 27
 642:	51 e0       	ldi	r21, 0x01	; 1
 644:	66 e0       	ldi	r22, 0x06	; 6
 646:	82 e0       	ldi	r24, 0x02	; 2
 648:	0e 94 2a 01 	call	0x254	; 0x254 <lcd_string2>
 64c:	2f ef       	ldi	r18, 0xFF	; 255
 64e:	85 ea       	ldi	r24, 0xA5	; 165
 650:	9e e0       	ldi	r25, 0x0E	; 14
 652:	21 50       	subi	r18, 0x01	; 1
 654:	80 40       	sbci	r24, 0x00	; 0
 656:	90 40       	sbci	r25, 0x00	; 0
 658:	e1 f7       	brne	.-8      	; 0x652 <main+0x10c>
 65a:	00 c0       	rjmp	.+0      	; 0x65c <main+0x116>
 65c:	00 00       	nop
 65e:	97 cf       	rjmp	.-210    	; 0x58e <main+0x48>

00000660 <__subsf3>:
 660:	50 58       	subi	r21, 0x80	; 128

00000662 <__addsf3>:
 662:	bb 27       	eor	r27, r27
 664:	aa 27       	eor	r26, r26
 666:	0e 94 48 03 	call	0x690	; 0x690 <__addsf3x>
 66a:	0c 94 20 04 	jmp	0x840	; 0x840 <__fp_round>
 66e:	0e 94 12 04 	call	0x824	; 0x824 <__fp_pscA>
 672:	38 f0       	brcs	.+14     	; 0x682 <__addsf3+0x20>
 674:	0e 94 19 04 	call	0x832	; 0x832 <__fp_pscB>
 678:	20 f0       	brcs	.+8      	; 0x682 <__addsf3+0x20>
 67a:	39 f4       	brne	.+14     	; 0x68a <__addsf3+0x28>
 67c:	9f 3f       	cpi	r25, 0xFF	; 255
 67e:	19 f4       	brne	.+6      	; 0x686 <__addsf3+0x24>
 680:	26 f4       	brtc	.+8      	; 0x68a <__addsf3+0x28>
 682:	0c 94 0f 04 	jmp	0x81e	; 0x81e <__fp_nan>
 686:	0e f4       	brtc	.+2      	; 0x68a <__addsf3+0x28>
 688:	e0 95       	com	r30
 68a:	e7 fb       	bst	r30, 7
 68c:	0c 94 09 04 	jmp	0x812	; 0x812 <__fp_inf>

00000690 <__addsf3x>:
 690:	e9 2f       	mov	r30, r25
 692:	0e 94 31 04 	call	0x862	; 0x862 <__fp_split3>
 696:	58 f3       	brcs	.-42     	; 0x66e <__addsf3+0xc>
 698:	ba 17       	cp	r27, r26
 69a:	62 07       	cpc	r22, r18
 69c:	73 07       	cpc	r23, r19
 69e:	84 07       	cpc	r24, r20
 6a0:	95 07       	cpc	r25, r21
 6a2:	20 f0       	brcs	.+8      	; 0x6ac <__addsf3x+0x1c>
 6a4:	79 f4       	brne	.+30     	; 0x6c4 <__addsf3x+0x34>
 6a6:	a6 f5       	brtc	.+104    	; 0x710 <__addsf3x+0x80>
 6a8:	0c 94 53 04 	jmp	0x8a6	; 0x8a6 <__fp_zero>
 6ac:	0e f4       	brtc	.+2      	; 0x6b0 <__addsf3x+0x20>
 6ae:	e0 95       	com	r30
 6b0:	0b 2e       	mov	r0, r27
 6b2:	ba 2f       	mov	r27, r26
 6b4:	a0 2d       	mov	r26, r0
 6b6:	0b 01       	movw	r0, r22
 6b8:	b9 01       	movw	r22, r18
 6ba:	90 01       	movw	r18, r0
 6bc:	0c 01       	movw	r0, r24
 6be:	ca 01       	movw	r24, r20
 6c0:	a0 01       	movw	r20, r0
 6c2:	11 24       	eor	r1, r1
 6c4:	ff 27       	eor	r31, r31
 6c6:	59 1b       	sub	r21, r25
 6c8:	99 f0       	breq	.+38     	; 0x6f0 <__addsf3x+0x60>
 6ca:	59 3f       	cpi	r21, 0xF9	; 249
 6cc:	50 f4       	brcc	.+20     	; 0x6e2 <__addsf3x+0x52>
 6ce:	50 3e       	cpi	r21, 0xE0	; 224
 6d0:	68 f1       	brcs	.+90     	; 0x72c <__addsf3x+0x9c>
 6d2:	1a 16       	cp	r1, r26
 6d4:	f0 40       	sbci	r31, 0x00	; 0
 6d6:	a2 2f       	mov	r26, r18
 6d8:	23 2f       	mov	r18, r19
 6da:	34 2f       	mov	r19, r20
 6dc:	44 27       	eor	r20, r20
 6de:	58 5f       	subi	r21, 0xF8	; 248
 6e0:	f3 cf       	rjmp	.-26     	; 0x6c8 <__addsf3x+0x38>
 6e2:	46 95       	lsr	r20
 6e4:	37 95       	ror	r19
 6e6:	27 95       	ror	r18
 6e8:	a7 95       	ror	r26
 6ea:	f0 40       	sbci	r31, 0x00	; 0
 6ec:	53 95       	inc	r21
 6ee:	c9 f7       	brne	.-14     	; 0x6e2 <__addsf3x+0x52>
 6f0:	7e f4       	brtc	.+30     	; 0x710 <__addsf3x+0x80>
 6f2:	1f 16       	cp	r1, r31
 6f4:	ba 0b       	sbc	r27, r26
 6f6:	62 0b       	sbc	r22, r18
 6f8:	73 0b       	sbc	r23, r19
 6fa:	84 0b       	sbc	r24, r20
 6fc:	ba f0       	brmi	.+46     	; 0x72c <__addsf3x+0x9c>
 6fe:	91 50       	subi	r25, 0x01	; 1
 700:	a1 f0       	breq	.+40     	; 0x72a <__addsf3x+0x9a>
 702:	ff 0f       	add	r31, r31
 704:	bb 1f       	adc	r27, r27
 706:	66 1f       	adc	r22, r22
 708:	77 1f       	adc	r23, r23
 70a:	88 1f       	adc	r24, r24
 70c:	c2 f7       	brpl	.-16     	; 0x6fe <__addsf3x+0x6e>
 70e:	0e c0       	rjmp	.+28     	; 0x72c <__addsf3x+0x9c>
 710:	ba 0f       	add	r27, r26
 712:	62 1f       	adc	r22, r18
 714:	73 1f       	adc	r23, r19
 716:	84 1f       	adc	r24, r20
 718:	48 f4       	brcc	.+18     	; 0x72c <__addsf3x+0x9c>
 71a:	87 95       	ror	r24
 71c:	77 95       	ror	r23
 71e:	67 95       	ror	r22
 720:	b7 95       	ror	r27
 722:	f7 95       	ror	r31
 724:	9e 3f       	cpi	r25, 0xFE	; 254
 726:	08 f0       	brcs	.+2      	; 0x72a <__addsf3x+0x9a>
 728:	b0 cf       	rjmp	.-160    	; 0x68a <__addsf3+0x28>
 72a:	93 95       	inc	r25
 72c:	88 0f       	add	r24, r24
 72e:	08 f0       	brcs	.+2      	; 0x732 <__addsf3x+0xa2>
 730:	99 27       	eor	r25, r25
 732:	ee 0f       	add	r30, r30
 734:	97 95       	ror	r25
 736:	87 95       	ror	r24
 738:	08 95       	ret

0000073a <__fixunssfsi>:
 73a:	0e 94 39 04 	call	0x872	; 0x872 <__fp_splitA>
 73e:	88 f0       	brcs	.+34     	; 0x762 <__fixunssfsi+0x28>
 740:	9f 57       	subi	r25, 0x7F	; 127
 742:	98 f0       	brcs	.+38     	; 0x76a <__fixunssfsi+0x30>
 744:	b9 2f       	mov	r27, r25
 746:	99 27       	eor	r25, r25
 748:	b7 51       	subi	r27, 0x17	; 23
 74a:	b0 f0       	brcs	.+44     	; 0x778 <__fixunssfsi+0x3e>
 74c:	e1 f0       	breq	.+56     	; 0x786 <__fixunssfsi+0x4c>
 74e:	66 0f       	add	r22, r22
 750:	77 1f       	adc	r23, r23
 752:	88 1f       	adc	r24, r24
 754:	99 1f       	adc	r25, r25
 756:	1a f0       	brmi	.+6      	; 0x75e <__fixunssfsi+0x24>
 758:	ba 95       	dec	r27
 75a:	c9 f7       	brne	.-14     	; 0x74e <__fixunssfsi+0x14>
 75c:	14 c0       	rjmp	.+40     	; 0x786 <__fixunssfsi+0x4c>
 75e:	b1 30       	cpi	r27, 0x01	; 1
 760:	91 f0       	breq	.+36     	; 0x786 <__fixunssfsi+0x4c>
 762:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__fp_zero>
 766:	b1 e0       	ldi	r27, 0x01	; 1
 768:	08 95       	ret
 76a:	0c 94 53 04 	jmp	0x8a6	; 0x8a6 <__fp_zero>
 76e:	67 2f       	mov	r22, r23
 770:	78 2f       	mov	r23, r24
 772:	88 27       	eor	r24, r24
 774:	b8 5f       	subi	r27, 0xF8	; 248
 776:	39 f0       	breq	.+14     	; 0x786 <__fixunssfsi+0x4c>
 778:	b9 3f       	cpi	r27, 0xF9	; 249
 77a:	cc f3       	brlt	.-14     	; 0x76e <__fixunssfsi+0x34>
 77c:	86 95       	lsr	r24
 77e:	77 95       	ror	r23
 780:	67 95       	ror	r22
 782:	b3 95       	inc	r27
 784:	d9 f7       	brne	.-10     	; 0x77c <__fixunssfsi+0x42>
 786:	3e f4       	brtc	.+14     	; 0x796 <__fixunssfsi+0x5c>
 788:	90 95       	com	r25
 78a:	80 95       	com	r24
 78c:	70 95       	com	r23
 78e:	61 95       	neg	r22
 790:	7f 4f       	sbci	r23, 0xFF	; 255
 792:	8f 4f       	sbci	r24, 0xFF	; 255
 794:	9f 4f       	sbci	r25, 0xFF	; 255
 796:	08 95       	ret

00000798 <__floatunsisf>:
 798:	e8 94       	clt
 79a:	09 c0       	rjmp	.+18     	; 0x7ae <__floatsisf+0x12>

0000079c <__floatsisf>:
 79c:	97 fb       	bst	r25, 7
 79e:	3e f4       	brtc	.+14     	; 0x7ae <__floatsisf+0x12>
 7a0:	90 95       	com	r25
 7a2:	80 95       	com	r24
 7a4:	70 95       	com	r23
 7a6:	61 95       	neg	r22
 7a8:	7f 4f       	sbci	r23, 0xFF	; 255
 7aa:	8f 4f       	sbci	r24, 0xFF	; 255
 7ac:	9f 4f       	sbci	r25, 0xFF	; 255
 7ae:	99 23       	and	r25, r25
 7b0:	a9 f0       	breq	.+42     	; 0x7dc <__floatsisf+0x40>
 7b2:	f9 2f       	mov	r31, r25
 7b4:	96 e9       	ldi	r25, 0x96	; 150
 7b6:	bb 27       	eor	r27, r27
 7b8:	93 95       	inc	r25
 7ba:	f6 95       	lsr	r31
 7bc:	87 95       	ror	r24
 7be:	77 95       	ror	r23
 7c0:	67 95       	ror	r22
 7c2:	b7 95       	ror	r27
 7c4:	f1 11       	cpse	r31, r1
 7c6:	f8 cf       	rjmp	.-16     	; 0x7b8 <__floatsisf+0x1c>
 7c8:	fa f4       	brpl	.+62     	; 0x808 <__floatsisf+0x6c>
 7ca:	bb 0f       	add	r27, r27
 7cc:	11 f4       	brne	.+4      	; 0x7d2 <__floatsisf+0x36>
 7ce:	60 ff       	sbrs	r22, 0
 7d0:	1b c0       	rjmp	.+54     	; 0x808 <__floatsisf+0x6c>
 7d2:	6f 5f       	subi	r22, 0xFF	; 255
 7d4:	7f 4f       	sbci	r23, 0xFF	; 255
 7d6:	8f 4f       	sbci	r24, 0xFF	; 255
 7d8:	9f 4f       	sbci	r25, 0xFF	; 255
 7da:	16 c0       	rjmp	.+44     	; 0x808 <__floatsisf+0x6c>
 7dc:	88 23       	and	r24, r24
 7de:	11 f0       	breq	.+4      	; 0x7e4 <__floatsisf+0x48>
 7e0:	96 e9       	ldi	r25, 0x96	; 150
 7e2:	11 c0       	rjmp	.+34     	; 0x806 <__floatsisf+0x6a>
 7e4:	77 23       	and	r23, r23
 7e6:	21 f0       	breq	.+8      	; 0x7f0 <__floatsisf+0x54>
 7e8:	9e e8       	ldi	r25, 0x8E	; 142
 7ea:	87 2f       	mov	r24, r23
 7ec:	76 2f       	mov	r23, r22
 7ee:	05 c0       	rjmp	.+10     	; 0x7fa <__floatsisf+0x5e>
 7f0:	66 23       	and	r22, r22
 7f2:	71 f0       	breq	.+28     	; 0x810 <__floatsisf+0x74>
 7f4:	96 e8       	ldi	r25, 0x86	; 134
 7f6:	86 2f       	mov	r24, r22
 7f8:	70 e0       	ldi	r23, 0x00	; 0
 7fa:	60 e0       	ldi	r22, 0x00	; 0
 7fc:	2a f0       	brmi	.+10     	; 0x808 <__floatsisf+0x6c>
 7fe:	9a 95       	dec	r25
 800:	66 0f       	add	r22, r22
 802:	77 1f       	adc	r23, r23
 804:	88 1f       	adc	r24, r24
 806:	da f7       	brpl	.-10     	; 0x7fe <__floatsisf+0x62>
 808:	88 0f       	add	r24, r24
 80a:	96 95       	lsr	r25
 80c:	87 95       	ror	r24
 80e:	97 f9       	bld	r25, 7
 810:	08 95       	ret

00000812 <__fp_inf>:
 812:	97 f9       	bld	r25, 7
 814:	9f 67       	ori	r25, 0x7F	; 127
 816:	80 e8       	ldi	r24, 0x80	; 128
 818:	70 e0       	ldi	r23, 0x00	; 0
 81a:	60 e0       	ldi	r22, 0x00	; 0
 81c:	08 95       	ret

0000081e <__fp_nan>:
 81e:	9f ef       	ldi	r25, 0xFF	; 255
 820:	80 ec       	ldi	r24, 0xC0	; 192
 822:	08 95       	ret

00000824 <__fp_pscA>:
 824:	00 24       	eor	r0, r0
 826:	0a 94       	dec	r0
 828:	16 16       	cp	r1, r22
 82a:	17 06       	cpc	r1, r23
 82c:	18 06       	cpc	r1, r24
 82e:	09 06       	cpc	r0, r25
 830:	08 95       	ret

00000832 <__fp_pscB>:
 832:	00 24       	eor	r0, r0
 834:	0a 94       	dec	r0
 836:	12 16       	cp	r1, r18
 838:	13 06       	cpc	r1, r19
 83a:	14 06       	cpc	r1, r20
 83c:	05 06       	cpc	r0, r21
 83e:	08 95       	ret

00000840 <__fp_round>:
 840:	09 2e       	mov	r0, r25
 842:	03 94       	inc	r0
 844:	00 0c       	add	r0, r0
 846:	11 f4       	brne	.+4      	; 0x84c <__fp_round+0xc>
 848:	88 23       	and	r24, r24
 84a:	52 f0       	brmi	.+20     	; 0x860 <__fp_round+0x20>
 84c:	bb 0f       	add	r27, r27
 84e:	40 f4       	brcc	.+16     	; 0x860 <__fp_round+0x20>
 850:	bf 2b       	or	r27, r31
 852:	11 f4       	brne	.+4      	; 0x858 <__fp_round+0x18>
 854:	60 ff       	sbrs	r22, 0
 856:	04 c0       	rjmp	.+8      	; 0x860 <__fp_round+0x20>
 858:	6f 5f       	subi	r22, 0xFF	; 255
 85a:	7f 4f       	sbci	r23, 0xFF	; 255
 85c:	8f 4f       	sbci	r24, 0xFF	; 255
 85e:	9f 4f       	sbci	r25, 0xFF	; 255
 860:	08 95       	ret

00000862 <__fp_split3>:
 862:	57 fd       	sbrc	r21, 7
 864:	90 58       	subi	r25, 0x80	; 128
 866:	44 0f       	add	r20, r20
 868:	55 1f       	adc	r21, r21
 86a:	59 f0       	breq	.+22     	; 0x882 <__fp_splitA+0x10>
 86c:	5f 3f       	cpi	r21, 0xFF	; 255
 86e:	71 f0       	breq	.+28     	; 0x88c <__fp_splitA+0x1a>
 870:	47 95       	ror	r20

00000872 <__fp_splitA>:
 872:	88 0f       	add	r24, r24
 874:	97 fb       	bst	r25, 7
 876:	99 1f       	adc	r25, r25
 878:	61 f0       	breq	.+24     	; 0x892 <__fp_splitA+0x20>
 87a:	9f 3f       	cpi	r25, 0xFF	; 255
 87c:	79 f0       	breq	.+30     	; 0x89c <__fp_splitA+0x2a>
 87e:	87 95       	ror	r24
 880:	08 95       	ret
 882:	12 16       	cp	r1, r18
 884:	13 06       	cpc	r1, r19
 886:	14 06       	cpc	r1, r20
 888:	55 1f       	adc	r21, r21
 88a:	f2 cf       	rjmp	.-28     	; 0x870 <__fp_split3+0xe>
 88c:	46 95       	lsr	r20
 88e:	f1 df       	rcall	.-30     	; 0x872 <__fp_splitA>
 890:	08 c0       	rjmp	.+16     	; 0x8a2 <__fp_splitA+0x30>
 892:	16 16       	cp	r1, r22
 894:	17 06       	cpc	r1, r23
 896:	18 06       	cpc	r1, r24
 898:	99 1f       	adc	r25, r25
 89a:	f1 cf       	rjmp	.-30     	; 0x87e <__fp_splitA+0xc>
 89c:	86 95       	lsr	r24
 89e:	71 05       	cpc	r23, r1
 8a0:	61 05       	cpc	r22, r1
 8a2:	08 94       	sec
 8a4:	08 95       	ret

000008a6 <__fp_zero>:
 8a6:	e8 94       	clt

000008a8 <__fp_szero>:
 8a8:	bb 27       	eor	r27, r27
 8aa:	66 27       	eor	r22, r22
 8ac:	77 27       	eor	r23, r23
 8ae:	cb 01       	movw	r24, r22
 8b0:	97 f9       	bld	r25, 7
 8b2:	08 95       	ret

000008b4 <__mulsf3>:
 8b4:	0e 94 6d 04 	call	0x8da	; 0x8da <__mulsf3x>
 8b8:	0c 94 20 04 	jmp	0x840	; 0x840 <__fp_round>
 8bc:	0e 94 12 04 	call	0x824	; 0x824 <__fp_pscA>
 8c0:	38 f0       	brcs	.+14     	; 0x8d0 <__mulsf3+0x1c>
 8c2:	0e 94 19 04 	call	0x832	; 0x832 <__fp_pscB>
 8c6:	20 f0       	brcs	.+8      	; 0x8d0 <__mulsf3+0x1c>
 8c8:	95 23       	and	r25, r21
 8ca:	11 f0       	breq	.+4      	; 0x8d0 <__mulsf3+0x1c>
 8cc:	0c 94 09 04 	jmp	0x812	; 0x812 <__fp_inf>
 8d0:	0c 94 0f 04 	jmp	0x81e	; 0x81e <__fp_nan>
 8d4:	11 24       	eor	r1, r1
 8d6:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <__fp_szero>

000008da <__mulsf3x>:
 8da:	0e 94 31 04 	call	0x862	; 0x862 <__fp_split3>
 8de:	70 f3       	brcs	.-36     	; 0x8bc <__mulsf3+0x8>

000008e0 <__mulsf3_pse>:
 8e0:	95 9f       	mul	r25, r21
 8e2:	c1 f3       	breq	.-16     	; 0x8d4 <__mulsf3+0x20>
 8e4:	95 0f       	add	r25, r21
 8e6:	50 e0       	ldi	r21, 0x00	; 0
 8e8:	55 1f       	adc	r21, r21
 8ea:	62 9f       	mul	r22, r18
 8ec:	f0 01       	movw	r30, r0
 8ee:	72 9f       	mul	r23, r18
 8f0:	bb 27       	eor	r27, r27
 8f2:	f0 0d       	add	r31, r0
 8f4:	b1 1d       	adc	r27, r1
 8f6:	63 9f       	mul	r22, r19
 8f8:	aa 27       	eor	r26, r26
 8fa:	f0 0d       	add	r31, r0
 8fc:	b1 1d       	adc	r27, r1
 8fe:	aa 1f       	adc	r26, r26
 900:	64 9f       	mul	r22, r20
 902:	66 27       	eor	r22, r22
 904:	b0 0d       	add	r27, r0
 906:	a1 1d       	adc	r26, r1
 908:	66 1f       	adc	r22, r22
 90a:	82 9f       	mul	r24, r18
 90c:	22 27       	eor	r18, r18
 90e:	b0 0d       	add	r27, r0
 910:	a1 1d       	adc	r26, r1
 912:	62 1f       	adc	r22, r18
 914:	73 9f       	mul	r23, r19
 916:	b0 0d       	add	r27, r0
 918:	a1 1d       	adc	r26, r1
 91a:	62 1f       	adc	r22, r18
 91c:	83 9f       	mul	r24, r19
 91e:	a0 0d       	add	r26, r0
 920:	61 1d       	adc	r22, r1
 922:	22 1f       	adc	r18, r18
 924:	74 9f       	mul	r23, r20
 926:	33 27       	eor	r19, r19
 928:	a0 0d       	add	r26, r0
 92a:	61 1d       	adc	r22, r1
 92c:	23 1f       	adc	r18, r19
 92e:	84 9f       	mul	r24, r20
 930:	60 0d       	add	r22, r0
 932:	21 1d       	adc	r18, r1
 934:	82 2f       	mov	r24, r18
 936:	76 2f       	mov	r23, r22
 938:	6a 2f       	mov	r22, r26
 93a:	11 24       	eor	r1, r1
 93c:	9f 57       	subi	r25, 0x7F	; 127
 93e:	50 40       	sbci	r21, 0x00	; 0
 940:	9a f0       	brmi	.+38     	; 0x968 <__stack+0x69>
 942:	f1 f0       	breq	.+60     	; 0x980 <__stack+0x81>
 944:	88 23       	and	r24, r24
 946:	4a f0       	brmi	.+18     	; 0x95a <__stack+0x5b>
 948:	ee 0f       	add	r30, r30
 94a:	ff 1f       	adc	r31, r31
 94c:	bb 1f       	adc	r27, r27
 94e:	66 1f       	adc	r22, r22
 950:	77 1f       	adc	r23, r23
 952:	88 1f       	adc	r24, r24
 954:	91 50       	subi	r25, 0x01	; 1
 956:	50 40       	sbci	r21, 0x00	; 0
 958:	a9 f7       	brne	.-22     	; 0x944 <__stack+0x45>
 95a:	9e 3f       	cpi	r25, 0xFE	; 254
 95c:	51 05       	cpc	r21, r1
 95e:	80 f0       	brcs	.+32     	; 0x980 <__stack+0x81>
 960:	0c 94 09 04 	jmp	0x812	; 0x812 <__fp_inf>
 964:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <__fp_szero>
 968:	5f 3f       	cpi	r21, 0xFF	; 255
 96a:	e4 f3       	brlt	.-8      	; 0x964 <__stack+0x65>
 96c:	98 3e       	cpi	r25, 0xE8	; 232
 96e:	d4 f3       	brlt	.-12     	; 0x964 <__stack+0x65>
 970:	86 95       	lsr	r24
 972:	77 95       	ror	r23
 974:	67 95       	ror	r22
 976:	b7 95       	ror	r27
 978:	f7 95       	ror	r31
 97a:	e7 95       	ror	r30
 97c:	9f 5f       	subi	r25, 0xFF	; 255
 97e:	c1 f7       	brne	.-16     	; 0x970 <__stack+0x71>
 980:	fe 2b       	or	r31, r30
 982:	88 0f       	add	r24, r24
 984:	91 1d       	adc	r25, r1
 986:	96 95       	lsr	r25
 988:	87 95       	ror	r24
 98a:	97 f9       	bld	r25, 7
 98c:	08 95       	ret

0000098e <__umulhisi3>:
 98e:	a2 9f       	mul	r26, r18
 990:	b0 01       	movw	r22, r0
 992:	b3 9f       	mul	r27, r19
 994:	c0 01       	movw	r24, r0
 996:	a3 9f       	mul	r26, r19
 998:	70 0d       	add	r23, r0
 99a:	81 1d       	adc	r24, r1
 99c:	11 24       	eor	r1, r1
 99e:	91 1d       	adc	r25, r1
 9a0:	b2 9f       	mul	r27, r18
 9a2:	70 0d       	add	r23, r0
 9a4:	81 1d       	adc	r24, r1
 9a6:	11 24       	eor	r1, r1
 9a8:	91 1d       	adc	r25, r1
 9aa:	08 95       	ret

000009ac <_exit>:
 9ac:	f8 94       	cli

000009ae <__stop_program>:
 9ae:	ff cf       	rjmp	.-2      	; 0x9ae <__stop_program>
